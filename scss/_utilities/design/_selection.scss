/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/::selection
/// The ::selection CSS pseudo-element applies styles to the part of
/// a document that has been highlighted by the user (such as clicking
/// and dragging the mouse across text).
///
/// Accessibility concerns
/// Don't override selected text styles for purely aesthetic
/// reasons — users can customize them to suit their needs.
/// For people experiencing cognitive concerns or who are less
/// technologically literate, unexpected changes to selection
/// styles may hurt their understanding of the functionality.
///
/// If overridden, it is important to ensure that the contrast
/// ratio between the text and background colors of the
/// selection is high enough that people experiencing
/// low vision conditions can read it.

/// Allowable properties:
// $text-selection-stroke-color: #ffffff !default;
// $text-selection-fill-color: #ffffff !default;
// $text-selection-stroke-width: 1px !default;
// $text-selection-text-shadow: none !default;
// $text-selection-text-decoration: none !default;
$text-selection-foreground: false !default;
$text-selection-background: false !default;

@mixin selection {
   @if $text-selection-background and
      $text-selection-foreground {
      ::selection {
         color: $text-selection-foreground;
         background-color: $text-selection-background;
      }
   }
}

/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/:target
/// The :target CSS pseudo-class represents a unique element
/// (the target element) with an id matching the URL's fragment.
/// For example, the following URL has a fragment (denoted by the # sign)
/// that points to an element called section2:
/// http://www.example.com/index.html#section2
/// The :target pseudo-class can be used to highlight the portion of a page
/// that has been linked to from a table of contents.

// $target-element-outline: 2px solid #86212b !default;
$target-element-foreground: $text-selection-foreground !default;
$target-element-background: $text-selection-background !default;

@mixin target {
   @if $target-element-foreground and
      $target-element-background {
      :target {
         color: $target-element-foreground;
         background-color: $target-element-background;
         outline: 2px solid $target-element-foreground;

         &::before {
            font: 70% sans-serif;
            content: "►";
            color: $target-element-foreground;
            margin-right: 0.25em;
         }
      }
   }
}

/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/:target#pure-css_lightbox
/// Pure-CSS lightbox
/// You can use the :target pseudo-class to create a lightbox without
/// using any JavaScript. This technique relies on the ability of anchor
/// links to point to elements that are initially hidden on the page.
/// Once targeted, the CSS changes their display so that they are shown.
